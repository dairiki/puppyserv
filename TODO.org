* DONE Clean up streaming connection shutdown
  CLOSED: [2014-03-24 Mon 23:12]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-24 Mon 23:12]
  :END:
  - 2014-03-24 21:54:40,780 WARNI [puppyserv.webcam][Thread-2]
    Streaming failed: 'NoneType' object has no attribute 'recv'
* DONE Fix still capture stuff and "no connection" image?
  CLOSED: [2014-03-24 Mon 23:13]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-24 Mon 23:13]
  :END:
* DONE Throttling
  CLOSED: [2014-03-28 Fri 15:29]
  :LOGBOOK:
  - State "DONE"       from "STARTED"    [2014-03-28 Fri 15:29]
  - State "STARTED"    from "DONE"       [2014-03-25 Tue 07:22]
  - State "DONE"       from "TODO"       [2014-03-24 Mon 10:47]
  :END:
  Set an overmal limit on outgoing frames/sec (or kb/sec?)
  and share it equally between clients.

  FIXME: this could be better.  Currently we limit the framerate
  to each client to max_rate / n_clients.   If there are slow clients
  it might be better to let the fast clients have the extra frames.
  But need to do this in a fair way, somehow so that certain clients
  can't hog all the frames.

* DONE Google analytics
  CLOSED: [2014-03-25 Tue 07:22]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-25 Tue 07:22]
  :END:

* DONE Buildout
  CLOSED: [2014-03-28 Fri 18:13]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-28 Fri 18:13]
  :END:
  - [X] Move supervisor config into buildout
  - [X] Move nginx config into buildout
  - [X] Set perms on log dir and uwsgi socket
    (just run as dairiki, use uwsgi allow group www-data to access socket)
* TODO Check Accepts: header
  If doesn't accept multipart/x-m-r serve snapshot
  or failure
* DONE Check request_method
  CLOSED: [2014-03-26 Wed 07:46]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-26 Wed 07:46]
  :END:
  Handle HEAD correctly, returns error for other methods
* DONE Fix the Failsafe stream still stream starting logic
  CLOSED: [2014-03-26 Wed 08:49]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-26 Wed 08:49]
  :END:
  Maybe don't start still stream until video stream misses one whole timeout
* DONE Make sure can only have one thread downloading stills
  CLOSED: [2014-03-28 Fri 10:50]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-28 Fri 10:50]
  :END:

* DONE Adjust the video buffer sizes to match the rate limiter bucket sizes
  CLOSED: [2014-03-28 Fri 15:29]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-28 Fri 15:29]
  :END:
* DONE Assertion error
  CLOSED: [2014-03-29 Sat 03:35]
  :LOGBOOK:
  - State "DONE"       from "TODO"       [2014-03-29 Sat 03:35]
  :END:
  2014-03-29 01:02:54,761 INFO  [puppyserv.stats][MainThread] > 207.14.34.38: stream terminated: 15727.3s, 35565 f 2.26/s;  691MB 45.0kB/s
  Traceback (most recent call last):
    File "/home/dairiki/puppyserv/puppyserv/__init__.py", line 148, in _app_iter
      for frame in frames:
    File "/home/dairiki/puppyserv/puppyserv/stats.py", line 93, in next
      frame = next(self.stream)
    File "/home/dairiki/puppyserv/puppyserv/util.py", line 37, in __call__
      yield next(iterable)
    File "/home/dairiki/puppyserv/puppyserv/stream.py", line 148, in stream
      assert wait_for is None
  AssertionError

* TODO Put Etag, and cache-control login into /snapshot
* TODO Better repr so can tell better what's happening when streams are opened
